@model List<ST10150702_PROG6212_POE.Models.Claim>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">
    <script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    <title>Create Claim</title>
    <style>
        html, body {
            height: 100%;
            margin: 0;
            padding: 0;
            font-family: Arial, sans-serif;
            display: flex;
            justify-content: center;
            align-items: center;
            position: relative;
            overflow: hidden;
        }

        body {
            background-image: url('@Url.Content("~/Pictures/lecturebackground.jpg")');
            background-size: 350px;
            background-repeat: repeat;
            background-position: center;
            position: relative;
        }

        #overlay {
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background-color: rgba(255, 255, 255, 0.6);
            z-index: 0;
        }

        .tab-container {
            background-color: white;
            padding: 2rem;
            border-radius: 8px;
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.3);
            width: 100%;
            max-width: 1200px;
            position: relative;
            z-index: 1;
        }

        .tab-navigation {
            display: flex;
            margin-bottom: 1rem;
            cursor: pointer;
        }

            .tab-navigation div {
                flex: 1;
                padding: 1rem;
                text-align: center;
                background-color: #f4f4f4;
                border: 1px solid #ddd;
                font-weight: bold;
            }

                .tab-navigation div.active {
                    background-color: #007BFF;
                    color: white;
                    font-weight: bold;
                }

        .tab-content {
            display: none;
        }

            .tab-content.active {
                display: block;
            }

        form {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 1rem;
            width: 100%;
        }

        .form-group {
            display: flex;
            flex-direction: column;
        }

            .form-group label {
                margin-bottom: 0.5rem;
            }

            .form-group input, .form-group select, .form-group textarea {
                padding: 0.5rem;
                border-radius: 4px;
                border: 1px solid #ddd;
                box-sizing: border-box;
            }

        .submit-button {
            grid-column: 2 / 3;
            background-color: #007BFF;
            color: white;
            border: none;
            padding: 0.75rem 1.5rem;
            border-radius: 4px;
            cursor: pointer;
            font-size: 16px;
            font-weight: bold;
            margin-top: 1rem;
            justify-self: end;
        }

        .claim-table {
            width: 100%;
            border-collapse: collapse;
        }

            .claim-table th, .claim-table td {
                border: 1px solid #ddd;
                padding: 0.75rem;
                text-align: left;
            }

            .claim-table th {
                background-color: #f4f4f4;
                font-weight: bold;
            }

        .popup-overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
            display: flex;
            justify-content: center;
            align-items: center;
            z-index: 1000;
            backdrop-filter: blur(5px);
        }

        .popup-content {
            background-color: white;
            padding: 2rem;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
            max-width: 500px;
            width: 100%;
        }

        .popup-buttons {
            display: flex;
            justify-content: flex-end;
            margin-top: 1rem;
        }

        .popup-button {
            padding: 0.5rem 1rem;
            margin-left: 0.5rem;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }

        .popup-button-confirm {
            background-color: #007BFF;
            color: white;
        }

        .popup-button-cancel {
            background-color: #f4f4f4;
            color: #333;
        }

        .status-approved {
            background-color: #4CAF50;
            color: white;
        }

        .status-rejected {
            background-color: #f44336;
            color: white;
        }

        .status-pending {
            background-color: #f58d42;
            color: white;
        }
    </style>
</head>
<body>
    <div id="overlay"></div>
    <div class="tab-container">
        <div class="tab-navigation">
            <div class="tab" onclick="openTab(event, 'create-claim')" id="defaultTab">Create Claim</div>
            <div class="tab" onclick="openTab(event, 'view-claims')">View Claims</div>
        </div>

        <div id="create-claim" class="tab-content active">
            <h1>Create Claim</h1>
            <form id="createClaimForm" method="post">
                <div class="form-group">
                    <label for="LecturerID">Lecturer ID</label>
                    <input type="number" id="LecturerID" name="LecturerID" required>
                </div>
                <div class="form-group">
                    <label for="TotalHoursWorked">Total Hours Worked</label>
                    <input type="number" id="TotalHoursWorked" name="TotalHoursWorked" step="0.01" required>
                </div>
                <div class="form-group">
                    <label for="HourlyRate">Hourly Rate (ZAR)</label>
                    <input type="number" id="HourlyRate" name="HourlyRate" step="0.01" required>
                </div>
                <div class="form-group">
                    <label for="AmountDue">Amount Due (ZAR)</label>
                    <input type="number" id="AmountDue" name="AmountDue" step="0.01" readonly>
                </div>
                <div class="form-group">
                    <label for="moduleCode">Module Code</label>
                    <select id="ModCode" name="ModCode" required>
                        <option value="PROG6111">PROG6111</option>
                        <option value="PROG6222">PROG6222</option>
                        <option value="CLDV6212">CLDV6212</option>
                        <option value="ADDB7311">ADDB7311</option>
                        <option value="CLDV5111">CLDV5111</option>
                        <option value="MPFD5622">MPFD5622</option>
                        <option value="SOEN6212">SOEN6212</option>
                        <option value="HETC7331">HETC7331</option>
                        <option value="FDAB6221">FDAB6221</option>
                    </select>
                </div>
                <div class="form-group">
                    <label for="Description">Description</label>
                    <textarea id="desc" name="desc" required></textarea>
                </div>
                <div class="form-group">
                    <label for="supportingImages">Supporting Documents</label>
                    <input type="file" id="supportingImages" name="supportingImages" multiple accept=".pdf,.docx,.xlsx,.jpg,.jpeg,.png">
                </div>
                <button type="submit" class="submit-button">Submit</button>

                <div id="successMessage" class="alert alert-success" style="display: none;">
                    Claim created successfully! Claim ID: <span id="claimId"></span>
                </div>

                <div id="errorMessage" class="alert alert-danger" style="display: none;">
                    Failed to create the claim. Please try again.
                </div>
            </form>
        </div>

        <div id="view-claims" class="tab-content">
            <h1>View Claims</h1>
            <table class="table">
                <thead>
                    <tr>
                        <th>ClaimID</th>
                        <th>LecturerID</th>
                        <th>Total Hours Worked</th>
                        <th>Hourly Rate</th>
                        <th>Amount Due</th>
                        <th>Module Code</th>
                        <th>Description</th>
                        <th>Status</th>
                        <th>Actions</th>
                        <th>Supporting Documents</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>@item.ClaimID</td>
                            <td>@item.LecturerID</td>
                            <td>@item.TotalHoursWorked</td>
                            <td>@item.HourlyRate</td>
                            <td>@item.AmountDue</td>
                            <td>@item.ModCode</td>
                            <td>@item.desc</td>
                            <td class="status-column" style="
                                @if(item.Status == "Approved") {
                                    @:background-color: #4CAF50; color: white;
                                } else if(item.Status == "Rejected") {
                                    @:background-color: #f44336; color: white;
                                } else if(item.Status == "Pending") {
                                    @:background-color: #f58d42; color: white;
                                }">
                                @item.Status
                            </td>
                            <td>
                                <button type="button" class="btn btn-danger" onclick="deleteClaim(@item.ClaimID)">Delete</button>
                            </td>
                            <td>
                                @if (!string.IsNullOrEmpty(item.DocumentPath))
                                {
                                    var documents = item.DocumentPath.Split(',');
                                    foreach (var doc in documents)
                                    {
                                        if (!string.IsNullOrWhiteSpace(doc))
                                        {
                                            var fileName = System.IO.Path.GetFileName(doc);
                                            <div>
                                                <a href="@Url.Content("~/" + doc)" target="_blank">@fileName</a>
                                            </div>
                                        }
                                    }
                                }
                                else
                                {
                                    <span>No documents uploaded</span>
                                }
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
            <p id="delete-message" style="color: green; display: none;">Claim deleted successfully!</p>
        </div>

        <div id="popupOverlay" class="popup-overlay" style="display: none;">
            <div class="popup-content">
                <h2>Confirm Claim Submission</h2>
                <div id="popupData"></div>
                <div class="popup-buttons">
                    <button class="popup-button popup-button-cancel" onclick="closePopup()">Cancel</button>
                    <button class="popup-button popup-button-confirm" onclick="submitClaim()">Confirm</button>
                </div>
            </div>
        </div>

        <script>
            // Function to calculate and update Amount Due
            function calculateAmountDue() {
                var totalHoursWorked = parseFloat(document.getElementById("TotalHoursWorked").value) || 0;
                var hourlyRate = parseFloat(document.getElementById("HourlyRate").value) || 0;
                var amountDue = totalHoursWorked * hourlyRate;

                // Set the amount due in the readonly field, formatted to 2 decimal places
                document.getElementById("AmountDue").value = amountDue.toFixed(2);
            }

            // Add event listeners for real-time updates
            document.getElementById("TotalHoursWorked").addEventListener("input", calculateAmountDue);
            document.getElementById("HourlyRate").addEventListener("input", calculateAmountDue);

            $(document).ready(function () {
                $("#createClaimForm").on("submit", function (event) {
                    event.preventDefault();

                    // Create FormData object from the form
                    var form = $(this)[0];
                    var formData = new FormData(form);

                    // Convert FormData to JSON object
                    var jsonData = {};
                    formData.forEach((value, key) => {
                        // Convert numeric values
                        if (key === 'TotalHoursWorked' || key === 'HourlyRate' || key === 'AmountDue') {
                            jsonData[key] = parseFloat(value);
                        } else {
                            jsonData[key] = value;
                        }
                    });

                    // Handle file uploads if needed
                    var fileInput = $("#supportingImages")[0];
                    if (fileInput.files.length > 0) {
                        var filesArray = Array.from(fileInput.files);
                        jsonData.supportingImages = filesArray;
                    }

                    // Log the data being sent (for debugging)
                    console.log("Sending data:", jsonData);

                    // Send the AJAX request
                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("Create", "Claim")',
                        data: JSON.stringify(jsonData),
                        contentType: 'application/json',
                        success: function (response) {
                            if (response.success) {
                                alert("Claim created successfully! Claim ID: " + response.claimId);
                                location.reload();
                            } else {
                                alert("Error creating claim: " + response.errors.join(", "));
                            }
                        },
                        error: function (xhr, status, error) {
                            console.log("Error details:", xhr.responseText);
                            alert("An error occurred while submitting the form.");
                        }
                    });
                });
            });

            function deleteClaim(claimId) {
                if (confirm('Are you sure you want to delete this claim?')) {
                    $.ajax({
                        url: '/Lecturer/Delete',
                        type: 'POST',
                        data: { id: claimId },
                        success: function (response) {
                            alert('Claim deleted successfully!');
                            location.reload();
                        },
                        error: function () {
                            alert('Error occurred while deleting the claim.');
                        }
                    });
                }
            }

            function showPopup() {
                const formData = new FormData(document.getElementById('createClaimForm'));
                let popupContent = '<ul>';
                for (let [key, value] of formData.entries()) {
                    if (key !== 'supportingImages') {
                        popupContent += `<li><strong>${key}: </strong> ${value}</li>`;
                    }
                }
                popupContent += '</ul>';
                document.getElementById('popupData').innerHTML = popupContent;
                document.getElementById('popupOverlay').style.display = 'flex';
            }

            function closePopup() {
                document.getElementById('popupOverlay').style.display = 'none';
            }

            // Function to handle form submission from popup
            function submitClaim() {
                document.getElementById('createClaimForm').submit();
                closePopup();
            }

            // Tab Control
            function openTab(evt, tabName) {
                // Hide all tab contents
                var i, tabcontent, tablinks;
                tabcontent = document.getElementsByClassName("tab-content");
                for (i = 0; i < tabcontent.length; i++) {
                    tabcontent[i].style.display = "none";
                    tabcontent[i].classList.remove("active");
                }

                // Remove "active" class from all tabs
                tablinks = document.getElementsByClassName("tab");
                for (i = 0; i < tablinks.length; i++) {
                    tablinks[i].classList.remove("active");
                }

                // Show the current tab and add "active" class to the button
                document.getElementById(tabName).style.display = "block";
                document.getElementById(tabName).classList.add("active");
                evt.currentTarget.classList.add("active");
            }

            // Open the default tab (Create Claim)
            document.getElementById("defaultTab").click();

            // Add this for debugging purposes
            $(document).ajaxError(function (event, jqxhr, settings, thrownError) {
                console.log("Ajax error occurred:");
                console.log("Status:", jqxhr.status);
                console.log("Response Text:", jqxhr.responseText);
                console.log("Error:", thrownError);
            });
        </script>
    </div>
</body>
</html>